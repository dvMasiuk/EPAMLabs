//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace RailTransport
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class PassengerCar : Car, IComparable<PassengerCar>
	{
        public virtual int CountBaggage
        {
            get { return this._passengers.Count(x => x.HasBaggage); }
        }

        public virtual int CountFreeSeats
        {
            get { return CountSeats - CountPassengers; }
        }

        public virtual int CountPassengers
        {
            get { return this._passengers.Count; }
        }

        public virtual int CountSeats
        {
            get;
            protected set;
        }

        public virtual int CountTakenSeats
        {
            get { return CountPassengers; }
        }

        public virtual TypeCar Type
        {
            get;
            protected set;
        }

        private List<Passenger> _passengers=null;

        public PassengerCar(int number, TypeCar type)
        {
            Number = number;
            Type = type;
            switch (type)
            {
                case TypeCar.Platskartny:
                    CountSeats = 54;
                    break;
                case TypeCar.Kupe:
                    CountSeats = 54;
                    break;
                case TypeCar.SpalnyVagon:
                    CountSeats = 54;
                    break;
            }
        }

        public virtual void AddPassenger(Passenger pass)
        {
            if (pass.Ticket.NumberTrain == Number)
                this._passengers.Add(pass);
        }

		public virtual void RemovePassenger(Passenger pass)
		{
            this._passengers.Remove(pass);
		}

		public virtual void RemoveAllPassengers()
		{
            this._passengers.Clear();
		}

        public int CompareTo(PassengerCar other)
        {
            return Type.CompareTo(other.Type);
        }
    }
}

